---
title: "Building a Spam Filter using Navie Bayesian Classifier"
subtitle: "BFOR 416/516: Final Data Science Project"
date: 2023-12-05
format: html
number-sections: true
editor: visual
---

```{r, warning=FALSE, message=FALSE, error=FALSE, echo=FALSE}
library(naivebayes)
library(tidyverse)
library(ggplot2)
library(psych)
#library(openintro)
#library(skimr)
#library(gt)
#library(ROSE)

```


## Problem Definition

Build a spam filter using email data that is provided. This data comes from incoming emails in David Diez’s (one of the authors of OpenIntro textbooks) Gmail account for the first three months of 2012.

The given data has already been preprocessed to: 

  a) remove all personally identifiable information, 
  
  b) compute word counts (number of times a word is found in a message),
  
  c) add spam/no spam label to each message
  

## Read data

```{r, warning=FALSE, message=FALSE, error=FALSE}
dat_email <- read_csv("dat_email_bfor516_final_project.csv")
dim(dat_email)

```

## Data Description

```{r}
dat_email %>% head() %>% gt::gt()

```


- **spam:** Indicator for whether the email was spam.

- **to_multiple:** Indicator for whether the email was addressed to more than one recipient

- **from:** Whether the message was listed as from anyone (this is usually set by default for regular outgoing email).

- **cc:** Number of people cc'ed.

- **sent_email:** Indicator for whether the sender had been sent an email in the last 30 days.

- **time:** Time at which email was sent.

- **image:** The number of images attached.

- **attach:** The number of attached files.

- **dollar:** The number of times a dollar sign or the word "dollar" appeared in the email. 

- **winner:** Indicates whether "winner" appeared in the email.

- **inherit:** The number of times "inherit (or an extension, such as "inheritence") appeared in the email.

- **password:** The number of times "password" appeared in the email. 

- **num_char:** The number of characters in the email, in thousands.

- **line_breaks:** he number of line breaks in the email (does not count text wrapping).

- **format:** Indicates whether the email was written using HTML (e.g. may have included bolding or active links).

- **re_subj:** Whether the subject started with “Re:”, “RE:”, “re:”, or “rE:”

- **exclaim_subj:** Whether there was an exclamation point in the subject.

- **urgent_subj:** Whether the word “urgent” was in the email subject.

- **exclaim_mess:** The number of exclamation points in the email message.

- **number:** Factor variable saying whether there was no number, a small number (under 1 million), or a big number.



```{r}
skimr::skim(dat_email)

```

```{r}
dat_email$spam <- as.factor(dat_email$spam)

```
